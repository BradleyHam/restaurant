{"version":3,"sources":["main.7c465696.chunk.css","_base.scss","_typography.scss","variables.scss","Button.scss","../../style/variables.scss","Hero.module.scss","SectionTwo.module.scss","../../../style/variables.scss","../../../style/breakpoints.scss","CircleLine.module.scss","MenuHighlights.module.scss","FamilyGathering.module.scss","MakeReservation.module.scss","../../style/breakpoints.scss","Footer.module.scss"],"names":[],"mappings":"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","file":"main.7c465696.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Spartan:wght@300;600;700&display=swap);\nhtml{box-sizing:border-box;font-size:16px}*,*:before,*:after{box-sizing:inherit;margin:0;padding:0}ol,ul{list-style:none}img{max-width:100%;height:auto}a{text-decoration:none;color:inherit}body{font-family:\"Spartan\"}h1{font-size:50px;line-height:62px;font-weight:400}@media (max-width: 750px){h1{font-size:40px;line-height:50px}}h2{font-weight:bold;font-size:40px;line-height:56px;margin-bottom:30px}h3{font-size:18px;line-height:28px;font-weight:600;text-transform:uppercase;letter-spacing:1px}h4{font-size:14px;line-height:28px}h1,h2,h3,body,button{font-family:\"Spartan\"}p{font-size:14px;line-height:1.5}.logo{font-weight:bold;font-size:25px}\n\nbutton{padding:15px 25px;text-transform:uppercase;font-size:12px;font-weight:600;letter-spacing:2px;cursor:pointer}button.dark{background:transparent;color:white;border:1px solid white}button.dark:hover{background:white;color:#17192b;border:1px solid #17192b}button.light{background:transparent;color:#111;border:1px solid #111}button.light:hover{background:#111;color:white;border:1px solid #17192b}\n\n.Hero_Hero__3Gda_{height:120vh;background:center/cover no-repeat url(/restaurant/static/media/hero-bg-mobile@2x.f8e1664f.jpg);color:white;text-align:center;padding:30px;display:flex;justify-content:center;align-items:center;flex-flow:column}.Hero_Hero__3Gda_ p{padding-bottom:30px}@media (min-width: 451px){.Hero_Hero__3Gda_{height:100vh;background:center/cover no-repeat url(/restaurant/static/media/hero-bg-tablet@2x.b5bbd83a.jpg)}}@media (min-width: 900px){.Hero_Hero__3Gda_{background:center/cover no-repeat url(/restaurant/static/media/hero-bg-desktop@2x.d69ea4f8.jpg);text-align:left;align-items:flex-start;padding:80px}}.Hero_logo__dzCCN{font-weight:bold;font-size:25px}.Hero_content__HixSN{transform:translateY(50px)}@media (min-width: 900px){.Hero_content__HixSN{transform:translateY(0);width:50%;display:flex;flex-flow:column;justify-content:space-between;height:100%}}\n\n.SectionTwo_SectionTwo__1-mUI{padding:0 30px;margin-top:-80px;text-align:center;position:relative}@media (min-width: 400px){.SectionTwo_SectionTwo__1-mUI{padding:0 80px}.SectionTwo_SectionTwo__1-mUI::after{content:'';position:absolute;bottom:0;right:0;background:#5c6779;height:380px;width:70%;opacity:.1;transform:translateY(200px);z-index:-1;border-radius:50px 0 0 0}}.SectionTwo_contentOne__3rgGc,.SectionTwo_contentTwo__o-VkC{display:flex;flex-flow:column;align-items:center;margin-bottom:calc(30px * 3)}@media (min-width: 900px){.SectionTwo_contentOne__3rgGc,.SectionTwo_contentTwo__o-VkC{flex-flow:row}}@media (min-width: 900px){.SectionTwo_contentOne__3rgGc{margin-bottom:0}}.SectionTwo_firstImage__SP140{height:60vh;width:100%;background:center/cover no-repeat url(/restaurant/static/media/enjoyable-place-mobile@2x.38e2cfbc.jpg);position:relative;box-shadow:0 30px 50px rgba(0,0,0,0.2);transform:translateX(-200px)}@media (min-width: 400px){.SectionTwo_firstImage__SP140{background:center/cover no-repeat url(/restaurant/static/media/enjoyable-place-tablet@2x.36532372.jpg);height:40vh}.SectionTwo_firstImage__SP140::after{content:'';position:absolute;height:250px;width:500px;left:-200px;bottom:-100px;background:#5c6779;z-index:-1;opacity:.1}}@media (min-width: 900px){.SectionTwo_firstImage__SP140{align-self:flex-start;height:60vh;width:100%;background:center/cover no-repeat url(/restaurant/static/media/enjoyable-place-desktop@2x.2dfa948e.jpg)}.SectionTwo_firstImage__SP140::after{height:250px;width:180%;left:-200px;bottom:40px}}.SectionTwo_secondImage__3PPV3{position:relative;height:60vh;width:100%;box-shadow:0 30px 50px rgba(0,0,0,0.2);background:center/cover no-repeat url(/restaurant/static/media/locally-sourced-mobile@2x.8c0135c0.jpg);transform:translateX(-200px)}@media (min-width: 400px){.SectionTwo_secondImage__3PPV3{background:center/cover no-repeat url(/restaurant/static/media/locally-sourced-tablet@2x.6b39764d.jpg);height:40vh}.SectionTwo_secondImage__3PPV3::after{content:url(/restaurant/static/media/pattern-lines.77989ac9.svg);position:absolute;bottom:40px;right:-50px}}@media (min-width: 900px){.SectionTwo_secondImage__3PPV3{align-self:flex-start;height:65vh;width:100%;background:center/cover no-repeat url(/restaurant/static/media/locally-sourced-desktop@2x.9ee23572.jpg);transform:translate(200px, 120px);z-index:3000}}.SectionTwo_firstImage__SP140,.SectionTwo_secondImage__3PPV3{opacity:0}@media (min-width: 900px){.SectionTwo_textOne__31pmN{text-align:left;padding:50px}}@media (min-width: 900px){.SectionTwo_textTwo__11k8G{order:-1;padding-right:50px;text-align:left}}@media (max-width: 899px){.SectionTwo_textOne__31pmN,.SectionTwo_textTwo__11k8G{display:flex;flex-flow:column;align-items:center}}\n\n.CircleLine_circle__Em-ZO{height:10px;width:10px;border-radius:10px;border:2px solid #9e7f66;position:relative;transform:translateX(-40px);opacity:.7;margin:30px}.CircleLine_circle__Em-ZO:after{content:'';width:80px;position:absolute;height:2px;display:block;background:#9e7f66;top:50%;left:15px;transform:translateY(-50%)}\n\n.MenuHighlights_MenuHighlights__3S46e{background:#111;color:white;text-align:center;padding:calc(30px * 3) 30px;position:relative;z-index:5}@media (min-width: 401px){.MenuHighlights_MenuHighlights__3S46e{padding:calc(30px * 3) 80px}}@media (min-width: 901px){.MenuHighlights_MenuHighlights__3S46e{display:flex}}.MenuHighlights_TitleSection__1JGoy{display:flex;align-items:center;flex-flow:column;padding-right:30px}@media (min-width: 901px){.MenuHighlights_TitleSection__1JGoy h2{font-size:30px;line-height:1.4}}@media (min-width: 701px){.MenuHighlights_TitleSection__1JGoy{width:70%;margin:30px auto}}@media (min-width: 901px){.MenuHighlights_TitleSection__1JGoy{flex:2 1;align-items:flex-start;text-align:left}}@media (min-width: 901px){.MenuHighlights_HighlightsSection__rk3Ht{flex:4 1}}.MenuHighlights_contentImg__51mb_{height:40vh;width:100%;margin:30px 0}@media (min-width: 701px){.MenuHighlights_contentImg__51mb_{flex:2 1;margin:0;align-self:stretch;height:auto;height:initial}}@media (min-width: 701px){.MenuHighlights_text__3xpgD{flex:4 1;text-align:left;margin-left:40px}.MenuHighlights_text__3xpgD h2{font-size:20px;margin-bottom:10px;line-height:1.5}}.MenuHighlights_contentImgFirst__hakD9{background:center/cover no-repeat url(/restaurant/static/media/salmon-mobile@2x.d31c4835.jpg)}.MenuHighlights_contentImgSecond__2FhNU{background:center/cover no-repeat url(/restaurant/static/media/beef-mobile@2x.2fc61a36.jpg)}.MenuHighlights_contentImgThird__1KVY5{background:center/cover no-repeat url(/restaurant/static/media/chocolate-mobile@2x.71d394d0.jpg)}.MenuHighlights_contentTwo__2JuZO,.MenuHighlights_contentThree__X_DkM{border-bottom:1px solid rgba(255,255,255,0.2)}.MenuHighlights_contentTwo__2JuZO,.MenuHighlights_contentThree__X_DkM,.MenuHighlights_contentFour__3d7Gr{padding-bottom:30px}@media (min-width: 701px){.MenuHighlights_contentTwo__2JuZO,.MenuHighlights_contentThree__X_DkM,.MenuHighlights_contentFour__3d7Gr{display:flex;padding:30px;align-items:center}}\n\n.FamilyGathering_FamilyGathering__DnudT{padding:calc(30px * 3) 30px;text-align:center}@media (min-width: 401px){.FamilyGathering_FamilyGathering__DnudT h2{padding-top:30px}}.FamilyGathering_FamilyGathering__DnudT h3{padding:10px;opacity:.2;cursor:pointer}.FamilyGathering_FamilyGathering__DnudT h3.FamilyGathering_active__36oQk{opacity:1;position:relative;transform:translateX(10px)}.FamilyGathering_FamilyGathering__DnudT h3.FamilyGathering_active__36oQk::after{position:absolute;content:'';display:block;width:100px;height:2px;background:#9e7f66;bottom:3px;left:50%;transform:translateX(-50%)}.FamilyGathering_FamilyGathering__DnudT p{padding-bottom:30px}@media (min-width: 901px){.FamilyGathering_FamilyGathering__DnudT{display:flex}.FamilyGathering_FamilyGathering__DnudT h3.FamilyGathering_active__36oQk::after{bottom:50%;left:-60px;z-index:-1;height:4px}}.FamilyGathering_gatheringImgContainer__4D3CI{height:60vh;box-shadow:0 30px 50px rgba(0,0,0,0.2);position:relative;overflow:hidden}@media (min-width: 901px){.FamilyGathering_gatheringImgContainer__4D3CI{flex:1 1}}.FamilyGathering_gatheringImg__3BmTF,.FamilyGathering_specialImg__1md7s,.FamilyGathering_socialImg__2illo{z-index:100;height:100%;position:absolute;top:0;right:0;left:0;right:0;opacity:0}.FamilyGathering_gatheringImg__3BmTF.FamilyGathering_active__36oQk,.FamilyGathering_specialImg__1md7s.FamilyGathering_active__36oQk,.FamilyGathering_socialImg__2illo.FamilyGathering_active__36oQk{opacity:1}.FamilyGathering_gatheringImg__3BmTF{background:center/cover no-repeat url(/restaurant/static/media/family-gathering-mobile@2x.da602467.jpg)}.FamilyGathering_specialImg__1md7s{background:center/cover no-repeat url(/restaurant/static/media/special-events-desktop@2x.3a427a80.jpg)}.FamilyGathering_socialImg__2illo{background:center/cover no-repeat url(/restaurant/static/media/social-events-desktop@2x.9c157134.jpg)}.FamilyGathering_gatheringText__2UeIj{display:flex;flex-flow:column;align-items:center}@media (min-width: 901px){.FamilyGathering_gatheringText__2UeIj{flex:1 1;text-align:left;align-items:flex-start;margin:0 60px}}.FamilyGathering_gatherings__3usuK{padding:calc(30px * 3) 0}.FamilyGathering_gatherings__3usuK h3{padding:14px 0}@media (max-width: 399px){.FamilyGathering_gatherings__3usuK{padding:20px 0;display:flex;justify-content:space-between}.FamilyGathering_gatherings__3usuK h3{font-size:12px}}@media (min-width: 401px){.FamilyGathering_gatherings__3usuK{display:flex;justify-content:space-between}.FamilyGathering_gatherings__3usuK h3{font-size:14px}}@media (min-width: 651px){.FamilyGathering_gatherings__3usuK{justify-content:space-around}}@media (min-width: 901px){.FamilyGathering_gatherings__3usuK{order:2;flex-flow:column;padding:30px 0}.FamilyGathering_gatherings__3usuK h3{padding:10px 0}}.FamilyGathering_desctiptionContainer__2nA9N{position:relative;overflow:hidden;min-height:200px;width:100%}@media (max-width: 399px){.FamilyGathering_desctiptionContainer__2nA9N{margin-bottom:40px}}.FamilyGathering_gatheringDesctiption__WKJf1,.FamilyGathering_specialDescription__16EgL,.FamilyGathering_socialDescription__3Gkba{position:absolute;top:0;right:0;bottom:0;left:0;opacity:0}.FamilyGathering_gatheringDesctiption__WKJf1.FamilyGathering_active__36oQk,.FamilyGathering_specialDescription__16EgL.FamilyGathering_active__36oQk,.FamilyGathering_socialDescription__3Gkba.FamilyGathering_active__36oQk{opacity:1}\n\n.MakeReservation_MakeReservation__1I3x5{background:center/cover no-repeat url(/restaurant/static/media/ready-bg-mobile.d480732f.jpg);color:white;padding:calc(30px * 3) 30px;text-align:center}@media (min-width: 401px){.MakeReservation_MakeReservation__1I3x5{background:center/cover no-repeat url(/restaurant/static/media/ready-bg-desktop@2x.55d123bf.jpg);z-index:10000;position:relative;padding:calc(30px * 3) 80px}}@media (min-width: 901px){.MakeReservation_MakeReservation__1I3x5{background:center/cover no-repeat url(/restaurant/static/media/ready-bg-desktop@2x.55d123bf.jpg);display:flex;justify-content:space-around}}@media (min-width: 901px){.MakeReservation_MakeReservation__1I3x5 h2{margin-bottom:0}}\n\n.Footer_Footer__37hEc{background:#111;padding:calc(30px * 3) 30px;color:white;text-align:center}@media (min-width: 401px){.Footer_Footer__37hEc{padding:calc(30px * 3) 80px}}@media (min-width: 901px){.Footer_Footer__37hEc{display:flex}}.Footer_details__14tpX,.Footer_times__3WCNf{margin:30px 0}@media (min-width: 901px){.Footer_details__14tpX,.Footer_times__3WCNf,.Footer_logo__3b2YI{flex:1 1;text-align:left}}\n\n","html {\n    box-sizing: border-box;\n    font-size: 16px;\n  }\n  \n  *, *:before, *:after {\n    box-sizing: inherit;\n    margin: 0;\n    padding:0;\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n  \n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  a{\n    text-decoration: none;\n    color: inherit;\n  }\n\n  ","@import url('https://fonts.googleapis.com/css2?family=Spartan:wght@300;600;700&display=swap');\n@import './variables.scss';\n\nbody{\n    font-family: \"Spartan\"\n}\nh1{\n    font-size: 50px;\n    line-height: 62px;\n    font-weight: 400;\n   \n    @media(max-width: 750px){\n        font-size: 40px; \n        line-height: 50px;\n    }\n}\nh2{\n    font-weight: bold;\n    font-size: 40px;\n    line-height: 56px;\n    margin-bottom: $elementSpace;\n}\nh3{\n    font-size: 18px;\n    line-height: 28px;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n   \n\n}\nh4{\n    font-size: 14px;\n    line-height: 28px\n}\n\nh1,h2,h3, body, button{\n    font-family: \"Spartan\";\n}\n\np{\n    font-size: 14px;\n    line-height: 1.5;\n}\n\n\n.logo{\n    font-weight: bold;\n    font-size: 25px;\n\n}","@import './breakpoints.scss';\n\n// primary\n\n$primary:#9e7f66;\n$secondary:#111111;\n\n\n//secondary\n\n$dark: #17192b;\n$mid:#242b37;\n$light: #5c6779;\n\n/// spacing\n\n\n$elementSpace: 30px;\n$sectionGap: calc(#{$elementSpace} * 3);\n$gutter: 30px;\n\n$desktopGutter: 80px;\n\n$imgShadow: 0 30px 50px rgba(0,0,0,.2);\n\n\n:export {\n    dark: $dark;\n    light: $light;\n  }","@import '../../style/variables.scss';\n\nbutton{\n    padding: 15px 25px;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 600;\n    letter-spacing: 2px;\n    cursor: pointer;    \n}\n\nbutton.dark{\n    background: transparent;\n    color: white;\n    border: 1px solid white;\n    &:hover{\n        background: white;\n        color: $dark;\n        border: 1px solid $dark;\n    }\n}\n\nbutton.light{\n    background: transparent;\n    color: $secondary;\n    border: 1px solid $secondary;\n  \n    &:hover{\n        background: $secondary;\n        color: white;\n        border: 1px solid $dark;\n    }\n}","@import './breakpoints.scss';\n\n// primary\n\n$primary:#9e7f66;\n$secondary:#111111;\n\n\n//secondary\n\n$dark: #17192b;\n$mid:#242b37;\n$light: #5c6779;\n\n/// spacing\n\n\n$elementSpace: 30px;\n$sectionGap: calc(#{$elementSpace} * 3);\n$gutter: 30px;\n\n$desktopGutter: 80px;\n\n$imgShadow: 0 30px 50px rgba(0,0,0,.2);\n\n\n:export {\n    dark: $dark;\n    light: $light;\n  }","@import '../../../style/variables.scss';\n@import '../../../style/breakpoints.scss';\n\n.Hero{\n    height: 120vh;\n    background: center/cover no-repeat url('../../../images/homepage/hero-bg-mobile@2x.jpg');\n    color: white;\n    text-align: center;\n    padding: $gutter;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column;\n    p{\n        padding-bottom: $elementSpace;\n    }\n    @include media('>450px'){\n        height: 100vh;\n        background: center/cover no-repeat url('../../../images/homepage/hero-bg-tablet@2x.jpg');\n    }\n    @include media('>=tablet'){\n        background: center/cover no-repeat url('../../../images/homepage/hero-bg-desktop@2x.jpg');\n        text-align: left;\n        align-items: flex-start;\n        padding: $desktopGutter;\n    }\n    @include media('>=desktop'){\n       \n    }\n}\n\n.logo{\n    font-weight: bold;\n    font-size: 25px;\n}\n\n.content{\n    transform: translateY(50px);\n\n\n    @include media('>=tablet'){\n        transform: translateY(0);\n        width: 50%;\n        display: flex;\n        flex-flow: column;\n        justify-content: space-between;\n        height: 100%;\n    }\n}","@import '../../../style/variables.scss';\n@import '../../../style/breakpoints.scss';\n\n.SectionTwo{\n     padding: 0 $gutter;\n     margin-top: -80px;\n     text-align:center;\n     position: relative;\n     @include media('>=phone'){\n        padding: 0 $desktopGutter; \n        &::after{\n            content: '';\n            position: absolute;\n            bottom: 0;\n            right: 0;\n            background: $light;\n            height: 380px;\n            width: 70%;\n            opacity: .1;\n            transform: translateY(200px);\n            z-index: -1;\n            border-radius: 50px 0 0 0;\n        }\n\n    }\n}\n.contentOne,.contentTwo{\n     display:flex; \n     flex-flow: column;\n     align-items: center;\n     margin-bottom: $sectionGap;\n     @include media('>=tablet'){\n        flex-flow: row;\n    }\n}\n.contentOne{\n    @include media('>=tablet'){\n        margin-bottom: 0;\n    }\n}\n\n.firstImage{\n    height: 60vh;\n    width: 100%;\n    background: center / cover no-repeat url('../../../images/homepage/enjoyable-place-mobile@2x.jpg');\n    position: relative;\n    box-shadow: $imgShadow;\n    transform: translateX(-200px);\n    @include media('>=phone'){\n        background: center / cover no-repeat url('../../../images/homepage/enjoyable-place-tablet@2x.jpg');\n        height: 40vh;\n        &::after{\n            content: '';\n            position: absolute;\n            height: 250px;\n            width: 500px;\n            left:-200px;\n            bottom: -100px;\n            background: $light;\n            z-index: -1;\n            opacity: .1;\n        }\n    }\n\n    @include media('>=tablet'){\n        align-self: flex-start;\n        height: 60vh;\n        width: 100%;\n        background: center / cover no-repeat url('../../../images/homepage/enjoyable-place-desktop@2x.jpg');\n        &::after{\n            height: 250px;\n            width: 180%;\n            left:-200px;\n            bottom: 40px;\n        }\n    }\n}\n\n.secondImage{\n    position: relative;\n    height: 60vh;\n    width: 100%;\n    box-shadow: $imgShadow;\n   \n    background: center / cover no-repeat url('../../../images/homepage/locally-sourced-mobile@2x.jpg');\n    transform: translateX(-200px);\n    @include media('>=phone'){\n        background: center / cover no-repeat url('../../../images/homepage/locally-sourced-tablet@2x.jpg');\n        height: 40vh;\n        &::after{\n            content: url('../../../images/patterns/pattern-lines.svg');\n            position: absolute;\n            bottom:40px;\n            right: -50px;\n        }\n    }\n    @include media('>=tablet'){\n        align-self: flex-start;\n        height: 65vh;\n        width: 100%;\n        background: center / cover no-repeat url('../../../images/homepage/locally-sourced-desktop@2x.jpg');\n        transform: translate(200px, 120px);\n        z-index: 3000;\n    }\n}\n\n.firstImage,.secondImage{\n    opacity: 0;\n}\n\n.textOne{\n    @include media('>=tablet'){\n        text-align:left;\n        padding: 50px;\n}\n}\n.textTwo{\n    @include media('>=tablet'){\n        order: -1;\n        padding-right: 50px;\n        text-align:left;\n}\n}\n\n.textOne, .textTwo{\n    @include media('<tablet'){\n        display: flex;\n        flex-flow: column;\n        align-items: center;\n    }\n}","@import './breakpoints.scss';\n\n// primary\n\n$primary:#9e7f66;\n$secondary:#111111;\n\n\n//secondary\n\n$dark: #17192b;\n$mid:#242b37;\n$light: #5c6779;\n\n/// spacing\n\n\n$elementSpace: 30px;\n$sectionGap: calc(#{$elementSpace} * 3);\n$gutter: 30px;\n\n$desktopGutter: 80px;\n\n$imgShadow: 0 30px 50px rgba(0,0,0,.2);\n\n\n:export {\n    dark: $dark;\n    light: $light;\n  }","$breakpoints: (\n  \"phone\": 400px,\n  \"tablet\": 900px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n\n/**\n*\n* Testing\n*\n**/","@import '../../style/variables.scss';\n\n$lineWidth: 80px;\n.circle{\n    height: 10px;\n    width: 10px;\n    border-radius: 10px;\n    border: 2px solid $primary;\n    position: relative;\n    transform: translateX(-$lineWidth / 2);\n    opacity: .7;\n    margin: $elementSpace;\n\n    &:after{\n        content: '';\n        width: $lineWidth;\n        position: absolute;\n        height: 2px;\n        display: block;\n        background: $primary;\n        top: 50%;\n        left: 15px;\n        -webkit-transform: translateY(-50%);\n        -moz-transform:  translateY(-50%);\n        -o-transform:  translateY(-50%);\n        transform:  translateY(-50%);\n       \n    }\n}","@import '../../../style/variables.scss';\n@import '../../../style/breakpoints.scss';\n\n.MenuHighlights{\n    background: $secondary;\n    color: white;\n    text-align: center;\n    padding: $sectionGap $gutter;\n    position: relative;\n    z-index: 5;\n    @include media('>phone'){\n        padding: $sectionGap $desktopGutter;\n    }\n    @include media('>tablet'){\n       display: flex;\n    }  \n}\n.TitleSection{\n    display: flex;\n    align-items: center;\n    flex-flow: column;\n    padding-right: 30px;\n\n    h2{\n        @include media('>tablet'){\n           font-size: 30px;\n           line-height: 1.4;\n            }\n    }\n\n    @include media('>700px'){\n       width: 70%;\n       margin: $elementSpace auto;\n     }\n    @include media('>tablet'){\n     flex: 2;\n     align-items: flex-start;\n     text-align: left;\n     }\n}\n\n.HighlightsSection{\n    @include media('>tablet'){\n        flex: 4;\n        }\n}\n\n\n.contentImg{\n    height: 40vh;\n    width: 100%;\n    margin: $elementSpace 0;\n    @include media('>700px'){\n        flex: 2;\n        margin: 0;\n        align-self: stretch;\n        height: initial;\n        \n     }\n}\n\n.text{\n    @include media('>700px'){\n        flex: 4;\n        text-align: left;\n        margin-left: 40px;\n        h2{\n            font-size: 20px;\n            margin-bottom: 10px;\n            line-height: 1.5;\n\n        }\n     }\n}\n.contentImgFirst{\n    background: center / cover no-repeat url('../../../images/homepage/salmon-mobile@2x.jpg');\n}\n.contentImgSecond{\n    background: center / cover no-repeat url('../../../images/homepage/beef-mobile@2x.jpg');\n}\n.contentImgThird{\n    background: center / cover no-repeat url('../../../images/homepage/chocolate-mobile@2x.jpg');\n}\n\n.contentTwo,.contentThree{\n    border-bottom: 1px solid rgba(255,255,255,.2);\n    \n}\n\n.contentTwo,.contentThree, .contentFour{\n    padding-bottom: $elementSpace;\n    @include media('>700px'){\n       display: flex;\n       padding:  $elementSpace;\n       align-items: center;\n}}","@import '../../../style/variables.scss';\n\n\n.FamilyGathering{\n    padding: $sectionGap $gutter;\n    text-align: center;\n    h2{\n        @include media('>phone'){\n            padding-top: $elementSpace;\n        }\n    }\n    h3{\n        padding: 10px;\n        opacity: .2;\n        cursor: pointer;\n    }\n    h3.active{\n        opacity: 1;\n        position: relative;\n        transform: translateX(10px);\n        &::after{\n            position: absolute;\n            content: '';\n            display: block;\n            width: 100px;\n            height: 2px;\n            background: $primary;\n            bottom: 3px;\n            left: 50%;\n            -webkit-transform: translateX(-50%);\n            -moz-transform:  translateX(-50%);\n            -o-transform:  translateX(-50%);\n            transform:  translateX(-50%);\n        }\n    }\n    p{\n        padding-bottom: $elementSpace;\n    }\n    @include media('>tablet'){\n        display: flex;\n        h3.active{\n            &::after{\n                bottom: 50%;\n                left: -60px;\n                z-index: -1;\n                height: 4px;\n            }\n        }\n    }\n}\n\n\n/// IMAGES  //////////////\n\n.gatheringImgContainer{\n    height: 60vh;\n    box-shadow: $imgShadow;\n    position: relative;\n    overflow: hidden;\n    @include media('>tablet'){\n        flex: 1;\n    }\n}\n\n.gatheringImg,.specialImg, .socialImg{\n   z-index: 100;\n    height: 100%;\n    position: absolute;\n    top:0;\n    right:0;\n    left:0;\n    right:0;\n    opacity: 0;\n    &.active{\n        opacity: 1;\n    }\n}\n\n.gatheringImg{\n    background: center / cover no-repeat url('../../../images/homepage/family-gathering-mobile@2x.jpg');\n}\n.specialImg{\n    background: center / cover no-repeat url('../../../images/homepage/special-events-desktop@2x.jpg');\n}\n.socialImg{\n    background: center / cover no-repeat url('../../../images/homepage/social-events-desktop@2x.jpg');\n}\n\n\n.gatheringText{\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n\n    @include media('>tablet'){\n        flex: 1;\n        text-align: left;\n        align-items: flex-start;\n        margin: 0 60px;\n    }\n}\n\n.gatherings{\n    padding: $sectionGap 0;\n    h3{\n        padding: 14px 0;\n    }\n    @include media('<400px'){\n      padding: 20px 0;\n      display: flex;\n      justify-content: space-between;\n      h3{\n          font-size: 12px;\n      }\n    }\n    @include media('>phone'){\n        display: flex;\n        justify-content: space-between;\n        h3{\n            font-size: 14px;\n        }\n    }\n    @include media('>650px'){\n        justify-content: space-around;\n    }\n    @include media('>tablet'){\n       order: 2;\n       flex-flow: column;\n       padding: 30px 0;\n       h3{\n        padding: 10px 0;\n    }\n    }\n}\n\n//////// TEXT //////////\n\n\n//////// DESCTIPTION CONTAINER //////////\n\n.desctiptionContainer{\n    @include media('<400px'){\n      margin-bottom: 40px;\n      }\n    position: relative;\n    overflow: hidden;\n    min-height: 200px;\n    width: 100%;\n    \n}\n\n.gatheringDesctiption,.specialDescription,.socialDescription{\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n}\n.gatheringDesctiption.active,\n.specialDescription.active,\n.socialDescription.active{\n    opacity: 1;\n}\n\n\n\n\n\n//////// DESCTIPTION CONTAINER //////////","@import '../../style/variables.scss';\n.MakeReservation{\n    background: center/cover no-repeat url('../../images/homepage/ready-bg-mobile.jpg');\n    color: white;\n    padding: $sectionGap $gutter;\n    text-align: center;\n    @include media('>phone'){\n        background: center/cover no-repeat url('../../images/homepage/ready-bg-desktop@2x.jpg');\n        z-index: 10000;\n        position: relative;\n        padding: $sectionGap $desktopGutter;\n    \n    }\n    @include media('>tablet'){\n        background: center/cover no-repeat url('../../images/homepage/ready-bg-desktop@2x.jpg');\n        display: flex;\n        justify-content: space-around;\n        \n    }\n\n\n\n    /////////////////////\n\n    h2{\n        @include media('>tablet'){\n            margin-bottom: 0;\n            \n        }\n    }\n\n \n}\n\n\n\n\n\n","$breakpoints: (\n  \"phone\": 400px,\n  \"tablet\": 900px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n\n/**\n*\n* Testing\n*\n**/","@import '../../style/variables.scss';\n.Footer{\n    background: $secondary;\n    padding: $sectionGap $gutter;\n    color: white;\n    text-align:center;\n    @include media('>phone'){\n        padding: $sectionGap $desktopGutter;\n    }\n    @include media('>tablet'){\n        display: flex;\n    }\n}\n\n.details, .times{\n    margin: $elementSpace 0;\n }\n\n.details, .times, .logo{\n    @include media('>tablet'){\n        flex: 1;\n        text-align: left;\n    }\n}"]}